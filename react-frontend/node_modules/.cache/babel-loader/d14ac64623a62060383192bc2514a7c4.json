{"ast":null,"code":"import React from'react';import withRouter from'react-router-dom/withRouter';import Particles from'react-particles-js';import Grid from'@material-ui/core/Grid';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import makeStyles from'@material-ui/core/styles/makeStyles';import Typography from'@material-ui/core/Typography';import useTheme from'@material-ui/core/styles/useTheme';import Header from'./Header';import SubHeader from'./SubHeader';function MarkdownRenderer(props){var theme=useTheme();var useStyles=makeStyles({list:{\"list-style\":\"circle\"},listItem:{paddingTop:0,paddingBottom:0},listText:{marginTop:0,marginBottom:0}});var classes=useStyles();switch(props.contentType){case'h2':return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:9,md:7,lg:6},/*#__PURE__*/React.createElement(Header,{header:props.content})));case'h4':return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:9,md:7,lg:6},/*#__PURE__*/React.createElement(SubHeader,{SubHeader:props.content})));case'list':var items=props.content.split(\"::\");return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:9,md:7,lg:6},/*#__PURE__*/React.createElement(List,{dense:true,className:classes.list},items.map(function(item){return/*#__PURE__*/React.createElement(ListItem,{className:classes.listItem},/*#__PURE__*/React.createElement(ListItemText,{className:classes.listText,primary:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},item)}));}))));case'body':return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:9,md:7,lg:6},/*#__PURE__*/React.createElement(Typography,{variant:\"body1\",paragraph:\"true\"},props.content)));case'particle':return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:9,md:7,lg:6},/*#__PURE__*/React.createElement(Header,{header:props.content}),/*#__PURE__*/React.createElement(Particles,{params:{particles:{color:{value:theme.palette.primary.main},links:{color:theme.palette.primary.main}}}})));}}export default withRouter(MarkdownRenderer);","map":{"version":3,"sources":["/Users/jameshutson/Code/jameshutson_v2.0/personal-site/react-frontend/src/components/MarkdownRenderer.js"],"names":["React","withRouter","Particles","Grid","List","ListItem","ListItemText","makeStyles","Typography","useTheme","Header","SubHeader","MarkdownRenderer","props","theme","useStyles","list","listItem","paddingTop","paddingBottom","listText","marginTop","marginBottom","classes","contentType","content","items","split","map","item","particles","color","value","palette","primary","main","links"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport withRouter from 'react-router-dom/withRouter';\n\nimport Particles from 'react-particles-js';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport useTheme from '@material-ui/core/styles/useTheme';\n\nimport Header from './Header';\nimport SubHeader from './SubHeader';\n\nfunction MarkdownRenderer(props) {\n\n    const theme = useTheme();\n\n    const useStyles = makeStyles({\n        list: {\n            \"list-style\": \"circle\",\n        },\n        listItem: {\n            paddingTop: 0,\n            paddingBottom: 0,\n        },\n        listText: {\n            marginTop: 0,\n            marginBottom: 0,\n        }\n      });\n\n    const classes = useStyles();\n\n    switch (props.contentType) {\n        case 'h2':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Header header = {props.content}/>\n                    </Grid>\n                </Grid>\n            );\n        case 'h4':\n            return(\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <SubHeader SubHeader = {props.content}/>\n                    </Grid>\n                </Grid>\n            )\n        case 'list':\n            let items = props.content.split(\"::\");\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <List dense={true} className={classes.list}>\n                            {items.map(item =>\n                                <ListItem className={classes.listItem}>\n                                    <ListItemText className={classes.listText} primary={\n                                        <Typography variant=\"body1\">\n                                            {item}\n                                        </Typography>\n                                    }/>\n                                </ListItem>\n                            )}\n                        </List>\n                    </Grid>\n                </Grid>\n            )\n        case 'body':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Typography variant=\"body1\" paragraph=\"true\">\n                            {props.content}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        case 'particle':\n            return(\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Header header={props.content}/>\n                        <Particles\n                        params={{\n                                particles: {\n                                    color: {\n                                        value: theme.palette.primary.main,\n                                    },\n                                    links: {\n                                        color: theme.palette.primary.main,\n                                      },\n                                },\n                            }\n                        }\n                        />\n                    </Grid>\n                </Grid>\n            );\n    }\n}\n\nexport default withRouter(MarkdownRenderer)"]},"metadata":{},"sourceType":"module"}