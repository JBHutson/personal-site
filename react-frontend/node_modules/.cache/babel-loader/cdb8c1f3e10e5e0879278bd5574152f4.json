{"ast":null,"code":"import React,{useState}from'react';import{withRouter}from'react-router-dom';import{Link as RouterLink}from'react-router-dom';import{makeStyles,useTheme}from'@material-ui/core/styles';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Switch from'@material-ui/core/Switch';import Button from'@material-ui/core/Button';import Box from'@material-ui/core/Box';import useMediaQuery from'@material-ui/core/useMediaQuery';var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},icons:{flexGrow:1}};});function Navbar(props){var theme=useTheme();var screenSize=useMediaQuery(theme.breakpoints.down('sm'));var changeSize=screenSize?'small':'large';var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{class:classes.root},/*#__PURE__*/React.createElement(AppBar,{position:\"sticky\"},/*#__PURE__*/React.createElement(Toolbar,null,/*#__PURE__*/React.createElement(Box,{className:classes.icons},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",component:RouterLink,to:\"/\",size:changeSize},\"James Hutson\")),/*#__PURE__*/React.createElement(Box,{p:1},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",component:RouterLink,to:\"/portfolio\",size:changeSize},\"Portfolio\")),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",component:RouterLink,to:\"/blog\",size:changeSize},\"Blog\")),/*#__PURE__*/React.createElement(Box,{p:1},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",component:RouterLink,to:\"/tutorial\",size:changeSize},\"Tutorials\")),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Switch,{checked:props.darkMode,onChange:function onChange(){return props.setDarkMode(!props.darkMode);},size:changeSize})))));}export default withRouter(Navbar);","map":{"version":3,"sources":["/Users/jameshutson/Code/jameshutson_v2.0/personal-site/react-frontend/src/components/Navbar.js"],"names":["React","useState","withRouter","Link","RouterLink","makeStyles","useTheme","AppBar","Toolbar","Switch","Button","Box","useMediaQuery","useStyles","theme","root","flexGrow","icons","Navbar","props","screenSize","breakpoints","down","changeSize","classes","darkMode","setDarkMode"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,kBAAnC,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,0BAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CAGA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,SAACS,KAAD,QAAY,CACrCC,IAAI,CAAG,CACHC,QAAQ,CAAE,CADP,CAD8B,CAIrCC,KAAK,CAAE,CACHD,QAAQ,CAAE,CADP,CAJ8B,CAAZ,EAAD,CAA5B,CASA,QAASE,CAAAA,MAAT,CAAgBC,KAAhB,CAAsB,CAClB,GAAML,CAAAA,KAAK,CAAGR,QAAQ,EAAtB,CACA,GAAIc,CAAAA,UAAU,CAAGR,aAAa,CAACE,KAAK,CAACO,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B,CACA,GAAIC,CAAAA,UAAU,CAAGH,UAAU,CAAG,OAAH,CAAY,OAAvC,CACA,GAAMI,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACI,mBACI,2BAAK,KAAK,CAAEW,OAAO,CAACT,IAApB,eACA,oBAAC,MAAD,EAAQ,QAAQ,CAAC,QAAjB,eACQ,oBAAC,OAAD,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAES,OAAO,CAACP,KAAxB,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,SAAS,CAAEb,UAAvD,CAAmE,EAAE,CAAC,GAAtE,CAA0E,IAAI,CAAEmB,UAAhF,iBADJ,CADJ,cAMI,oBAAC,GAAD,EAAK,CAAC,CAAE,CAAR,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,SAAS,CAAEnB,UAAvD,CAAmE,EAAE,CAAC,YAAtE,CAAmF,IAAI,CAAEmB,UAAzF,cADJ,CANJ,cAWI,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,SAAS,CAAEnB,UAAvD,CAAmE,EAAE,CAAC,OAAtE,CAA8E,IAAI,CAAEmB,UAApF,SADJ,CAXJ,cAgBI,oBAAC,GAAD,EAAK,CAAC,CAAE,CAAR,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,SAAS,CAAEnB,UAAvD,CAAmE,EAAE,CAAC,WAAtE,CAAkF,IAAI,CAAEmB,UAAxF,cADJ,CAhBJ,cAqBI,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,OAAO,CAAEJ,KAAK,CAACM,QAAvB,CAAiC,QAAQ,CAAE,0BAAMN,CAAAA,KAAK,CAACO,WAAN,CAAkB,CAACP,KAAK,CAACM,QAAzB,CAAN,EAA3C,CAAqF,IAAI,CAAEF,UAA3F,EADJ,CArBJ,CADR,CADA,CADJ,CA+BH,CAEL,cAAerB,CAAAA,UAAU,CAACgB,MAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root : {\n        flexGrow: 1,\n    },\n    icons: {\n        flexGrow: 1,\n    },\n}));\n\nfunction Navbar(props){\n    const theme = useTheme();\n    let screenSize = useMediaQuery(theme.breakpoints.down('sm'));\n    let changeSize = screenSize ? 'small': 'large';\n    const classes = useStyles();\n        return (\n            <div class={classes.root}>\n            <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <Box className={classes.icons}>\n                            <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/\" size={changeSize}>\n                                James Hutson\n                            </Button>\n                        </Box>\n                        <Box p={1}>\n                            <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/portfolio\" size={changeSize}>\n                                Portfolio\n                            </Button>\n                        </Box>\n                        <Box>\n                            <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/blog\" size={changeSize}>\n                                Blog\n                            </Button>\n                        </Box>\n                        <Box p={1}>\n                            <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/tutorial\" size={changeSize}>\n                                Tutorials\n                            </Button>\n                        </Box>\n                        <Box>\n                            <Switch checked={props.darkMode} onChange={() => props.setDarkMode(!props.darkMode)} size={changeSize}/>\n                        </Box>\n                    </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n\nexport default withRouter(Navbar);"]},"metadata":{},"sourceType":"module"}