{"version":3,"sources":["components/MarkdownRenderer.js","components/Article.js","App.js","serviceWorker.js","index.js","components/Header.js","components/SubHeader.js"],"names":["withRouter","props","contentType","Grid","container","justify","item","xs","sm","md","lg","Header","header","content","SubHeader","items","split","List","dense","map","ListItem","ListItemText","primary","Typography","variant","paragraph","useState","article","setArticle","useEffect","axios","get","params","slug","match","then","res","data","Fragment","Box","ml","mr","articleContent","content_type","PortfolioPage","lazy","BlogPage","FrontPage","SkillsPage","Navbar","Footer","App","prefersDarkMode","useMediaQuery","noSsr","window","localStorage","getItem","key","initValue","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","darkMode","setDarkMode","theme","createMuiTheme","palette","type","light","main","dark","contrastText","secondary","classes","makeStyles","paper","minHeight","display","flexDirection","space","flexGrow","useStyles","responsiveFontSizes","Paper","className","exact","path","Boolean","location","hostname","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","subtitle","justifyContent","mt","borderBottom"],"mappings":"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","file":"js/main.f7cc2e8a.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Header from './Header';\nimport SubHeader from './SubHeader';\nimport withRouter from 'react-router-dom/withRouter';\n\nfunction MarkdownRenderer(props) {\n    switch (props.contentType) {\n        case 'h2':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Header header = {props.content}/>\n                    </Grid>\n                </Grid>\n            );\n        case 'h4':\n            return(\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <SubHeader SubHeader = {props.content}/>\n                    </Grid>\n                </Grid>\n            )\n        case 'list':\n            let items = props.content.split(\":\");\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <List dense={true}>\n                            {items.map(item =>\n                                <ListItem dense={true}>\n                                    <ListItemText primary={item}/>\n                                </ListItem>\n                            )}\n                        </List>\n                    </Grid>\n                </Grid>\n            )\n        case 'body':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Typography variant=\"body1\" paragraph=\"true\">\n                            {props.content}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n    }\n}\n\nexport default withRouter(MarkdownRenderer)","import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport MarkdownRenderer from './MarkdownRenderer';\n\nfunction Article(props) {\n\n    const [article, setArticle] = useState();\n\n    useEffect(() => {\n        axios.get('http://127.0.0.1:5000/api/article', {\n            params: {\n                slug: props.match.params.slug\n            }\n        })\n        .then(res => {\n            setArticle(res.data)\n        })\n    }, [false])\n\n    return (\n        <React.Fragment>\n            <Box ml=\"auto\" mr=\"auto\">\n                {article ? article.content.map(articleContent => <MarkdownRenderer contentType={articleContent.content_type} content={articleContent.content}/>): 'Loading...'}\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Article);","import React, { useState, lazy } from 'react';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\nimport Switch from 'react-router-dom/Switch';\nimport Route from 'react-router-dom/Route';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Paper from '@material-ui/core/Paper';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport responsiveFontSizes from '@material-ui/core/styles/responsiveFontSizes';\nimport Article from './components/Article';\n\nconst PortfolioPage = lazy(() => import('./components/Portfolio'));\nconst BlogPage = lazy(() => import('./components/Blog'));\nconst FrontPage = lazy(() => import('./components/Front'));\nconst SkillsPage = lazy(() => import('./components/Skills'));\nconst Navbar = lazy(() => import('./components/Navbar'));\nconst Footer = lazy(() => import('./components/Footer'));\n\n\n\nfunction App(){\n  let prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', { noSsr: true });\n  if (window.localStorage.getItem('darkmode')){\n    prefersDarkMode = window.localStorage.getItem('darkmode');\n  }\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', prefersDarkMode);\n\n  let theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark': 'light',\n      primary: {\n        light: '#1769aa',\n        main: '#2196f3',\n        dark: '#4dabf5',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#41257b',\n        main: '#5e35b1',\n        dark: '#7e5dc0',\n        contrastText: '#000',\n      },\n    },\n  });\n\n  const useStyles = makeStyles({\n    paper: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    space: {\n      flexGrow: 1\n    }\n  });\n\n  const classes = useStyles();\n\n  theme = responsiveFontSizes(theme);\n\n    return (\n      <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <Paper className={classes.paper}>\n          <Navbar darkMode={darkMode} setDarkMode={setDarkMode}/>\n          <main>\n            <Switch>\n              <Route exact path=\"/\">\n                <FrontPage/>\n              </Route>\n              <Route path=\"/portfolio\">\n                <PortfolioPage/>\n              </Route>\n              <Route path=\"/blog/:slug\">\n                <Article/>\n              </Route>\n              <Route path=\"/blog\">\n                <BlogPage/>\n              </Route>\n              <Route path=\"/skills\">\n                <SkillsPage/>\n              </Route>\n            </Switch>\n          </main>\n          <div className={classes.space}></div>\n          <Footer/>\n        </Paper>\n        </MuiThemeProvider>\n      </BrowserRouter>\n    );\n  };\n\n  function useLocalStorage(key, initValue){\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        const item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : initValue;\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    const setValue = value => {\n      try {\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return [storedValue, setValue];\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,  {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Suspense fallback={<div></div>}>\n        <App />\n      </Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport withRouter from 'react-router-dom/withRouter';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction Header(props) {\n\n    if (props.subtitle) {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Typography variant=\"h4\">\n                            {props.subtitle}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\" paragraph=\"true\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default withRouter(Header);","import React from 'react';\nimport withRouter from 'react-router-dom/withRouter';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction SubHeader(props){\n    return (\n        <Box borderBottom={1}>\n            <Typography variant=\"h4\">\n                {props.SubHeader}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default withRouter(SubHeader);"],"sourceRoot":""}