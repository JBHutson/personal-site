{"version":3,"sources":["components/Header.js","components/SubHeader.js","components/MarkdownRenderer.js","components/Article.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","subtitle","Fragment","display","justifyContent","mt","variant","header","paragraph","borderBottom","SubHeader","theme","useTheme","classes","makeStyles","list","listItem","paddingTop","paddingBottom","listText","marginTop","marginBottom","useStyles","contentType","Grid","container","justify","item","xs","sm","md","lg","Header","content","items","split","List","dense","className","map","ListItem","ListItemText","primary","Typography","params","particles","color","value","palette","main","links","useState","article","setArticle","useEffect","axios","get","slug","match","then","res","data","Box","ml","mr","articleContent","content_type","CircularProgress","title","field","paddingRight","topMargin","Card","raised","CardContent","noValidate","autoComplete","TextField","id","label","Button","PortfolioPage","lazy","BlogPage","FrontPage","SkillsPage","Navbar","Footer","App","prefersDarkMode","useMediaQuery","noSsr","window","localStorage","getItem","key","initValue","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","darkMode","setDarkMode","createMuiTheme","type","light","dark","contrastText","secondary","paper","minHeight","flexDirection","space","flexGrow","responsiveFontSizes","Paper","exact","path","Boolean","location","hostname","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"sHAAA,sDAyCeA,SAnCf,SAAgBC,GAEZ,OAAIA,EAAMC,SAEF,kBAAC,IAAMC,SAAP,KACI,gCACI,kBAAC,IAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAG,QAC3C,kBAAC,IAAD,CAAYC,QAAQ,MACfN,EAAMO,SAGf,kBAAC,IAAD,CAAKJ,QAAQ,OAAOC,eAAe,UAC/B,kBAAC,IAAD,CAAYE,QAAQ,MACfN,EAAMC,aAQvB,kBAAC,IAAMC,SAAP,KACI,gCACI,kBAAC,IAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAG,QAC3C,kBAAC,IAAD,CAAYC,QAAQ,KAAKE,UAAU,QAC9BR,EAAMO,e,iCC/BnC,sDAeeR,SAVf,SAAmBC,GACf,OACI,kBAAC,IAAD,CAAKS,aAAc,GACf,kBAAC,IAAD,CAAYH,QAAQ,MACfN,EAAMU,gB,4bC8FRX,WA1Ff,SAA0BC,GAEtB,IAAMW,EAAQC,MAgBRC,EAdYC,IAAW,CACzBC,KAAM,CACF,aAAc,UAElBC,SAAU,CACNC,WAAY,EACZC,cAAe,GAEnBC,SAAU,CACNC,UAAW,EACXC,aAAc,IAINC,GAEhB,OAAQtB,EAAMuB,aACV,IAAK,KACD,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACC,EAAA,EAAD,CAAQzB,OAAUP,EAAMiC,YAIxC,IAAK,KACD,OACI,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACrB,EAAA,EAAD,CAAWA,UAAaV,EAAMiC,YAI9C,IAAK,OACD,IAAIC,EAAQlC,EAAMiC,QAAQE,MAAM,MAChC,OACI,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACK,EAAA,EAAD,CAAMC,OAAO,EAAMC,UAAWzB,EAAQE,MACjCmB,EAAMK,KAAI,SAAAZ,GAAI,OACX,kBAACa,EAAA,EAAD,CAAUF,UAAWzB,EAAQG,UACzB,kBAACyB,EAAA,EAAD,CAAcH,UAAWzB,EAAQM,SAAUuB,QACvC,kBAACC,EAAA,EAAD,CAAYrC,QAAQ,SACfqB,YASrC,IAAK,OACD,OACI,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACY,EAAA,EAAD,CAAYrC,QAAQ,QAAQE,UAAU,QACjCR,EAAMiC,WAK3B,IAAK,WACD,OACI,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACC,EAAA,EAAD,CAAQzB,OAAQP,EAAMiC,UACtB,kBAAC,IAAD,CACAW,OAAQ,CACAC,UAAW,CACPC,MAAO,CACHC,MAAOpC,EAAMqC,QAAQN,QAAQO,MAEjCC,MAAO,CACHJ,MAAOnC,EAAMqC,QAAQN,QAAQO,gB,SCzDtDlD,4BA1Bf,SAAiBC,GAAQ,IAAD,EAEUmD,qBAFV,mBAEbC,EAFa,KAEJC,EAFI,KAepB,OAXAC,qBAAU,WACNC,IAAMC,IAAI,oCAAqC,CAC3CZ,OAAQ,CACJa,KAAMzD,EAAM0D,MAAMd,OAAOa,QAGhCE,MAAK,SAAAC,GACFP,EAAWO,EAAIC,WAEpB,EAAC,IAGA,kBAAC,IAAM3D,SAAP,KACI,kBAAC4D,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACbZ,EAAUA,EAAQnB,QAAQM,KAAI,SAAA0B,GAAc,OAC7C,kBAAC,EAAD,CAAkB1C,YAAa0C,EAAeC,aAAcjC,QAASgC,EAAehC,aAAa,kBAACkC,EAAA,EAAD,CAAkBrB,MAAM,mB,oCCwB1H/C,WAxCf,SAAeC,GAEGY,MAAd,IAcMC,EAZYC,IAAW,CACzBsD,MAAO,CACHlD,cAAe,QAEnBmD,MAAO,CACHC,aAAc,QAElBC,UAAW,CACPnD,UAAW,SAIHE,GAEhB,OACI,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAAC4C,EAAA,EAAD,CAAMC,OAAO,OAAOnC,UAAWzB,EAAQ0D,WACnC,kBAACG,EAAA,EAAD,KACI,kBAAC/B,EAAA,EAAD,CAAYL,UAAWzB,EAAQuD,OAA/B,SAGA,0BAAMO,YAAU,EAACC,aAAa,OAC1B,kBAACC,EAAA,EAAD,CAAWC,GAAG,WAAWC,MAAM,WAAWzE,QAAQ,WAAWgC,UAAWzB,EAAQwD,QAChF,kBAACQ,EAAA,EAAD,CAAWC,GAAG,WAAWC,MAAM,WAAWzE,QAAQ,cAEtD,kBAAC0E,EAAA,EAAD,CAAQ1E,QAAQ,YAAYwC,MAAM,UAAUR,UAAWzB,EAAQ0D,WAA/D,gBC5BlBU,EAAgBC,gBAAK,kBAAM,iCAC3BC,EAAWD,gBAAK,kBAAM,uDACtBE,EAAYF,gBAAK,kBAAM,iCACvBG,EAAaH,gBAAK,kBAAM,iCACxBI,EAASJ,gBAAK,kBAAM,iCACpBK,GAASL,gBAAK,kBAAM,iCAuGXM,OAnGf,WACE,IAAIC,EAAkBC,YAAc,+BAAgC,CAAEC,OAAO,IACzEC,OAAOC,aAAaC,QAAQ,cAC9BL,EAAkBG,OAAOC,aAAaC,QAAQ,aAHpC,MA2EZ,SAAyBC,EAAKC,GAAW,IAAD,EACA7C,oBAAS,WAC7C,IACE,IAAMxB,EAAOiE,OAAOC,aAAaC,QAAQC,GACzC,OAAOpE,EAAOsE,KAAKC,MAAMvE,GAAQqE,EACjC,MAAOG,GACPC,QAAQC,IAAIF,OANsB,mBAC/BG,EAD+B,KAClBC,EADkB,KAoBtC,MAAO,CAACD,EAVS,SAAAvD,GACf,IACE,IAAMyD,EAAezD,aAAiB0D,SAAW1D,EAAMuD,GAAevD,EACtEwD,EAAeC,GACfZ,OAAOC,aAAaa,QAAQX,EAAKE,KAAKU,UAAUH,IAChD,MAAOL,GACPC,QAAQC,IAAIF,MAtFcS,CAAgB,WAAYnB,GALhD,mBAKLoB,EALK,KAKKC,EALL,KAORnG,EAAQoG,IAAe,CACzB/D,QAAS,CACPgE,KAAMH,EAAW,OAAQ,QACzBnE,QAAS,CACPuE,MAAO,UACPhE,KAAM,UACNiE,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTH,MAAO,UACPhE,KAAM,UACNiE,KAAM,UACNC,aAAc,WAgBdtG,EAXYC,IAAW,CAC3BuG,MAAO,CACLC,UAAW,QACXnH,QAAS,OACToH,cAAe,UAEjBC,MAAO,CACLC,SAAU,IAIEnG,GAId,OAFFX,EAAQ+G,IAAoB/G,GAGxB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAkBA,MAAOA,GACvB,kBAACgH,EAAA,EAAD,CAAOrF,UAAWzB,EAAQwG,OACxB,kBAAC/B,EAAD,CAAQuB,SAAUA,EAAUC,YAAaA,IACzC,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,KAChB,kBAACzC,EAAD,OAEF,kBAAC,IAAD,CAAOyC,KAAK,cACV,kBAAC5C,EAAD,OAEF,kBAAC,IAAD,CAAO4C,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC1C,EAAD,OAEF,kBAAC,IAAD,CAAO0C,KAAK,WACV,kBAACxC,EAAD,OAEF,kBAAC,IAAD,CAAOwC,KAAK,UACV,kBAAC,EAAD,SAIN,yBAAKvF,UAAWzB,EAAQ2G,QACxB,kBAACjC,GAAD,UC9EUuC,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAAStE,MACvB,2DCVN,IAAM/C,GAAQoG,IAAe,IAI7BkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAexH,MAAOA,IACpB,kBAAC,WAAD,CAAUyH,SAAU,+BAClB,kBAAC,GAAD,SAINC,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdC,OAAM,SAAAzC,GACLC,QAAQD,MAAMA,EAAM0C,c","file":"js/main.60896736.chunk.js","sourcesContent":["import React from 'react';\nimport withRouter from 'react-router-dom/withRouter';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction Header(props) {\n\n    if (props.subtitle) {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Typography variant=\"h4\">\n                            {props.subtitle}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\" paragraph=\"true\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default withRouter(Header);","import React from 'react';\nimport withRouter from 'react-router-dom/withRouter';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction SubHeader(props){\n    return (\n        <Box borderBottom={1}>\n            <Typography variant=\"h4\">\n                {props.SubHeader}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default withRouter(SubHeader);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Header from './Header';\nimport SubHeader from './SubHeader';\nimport Particles from 'react-particles-js';\nimport withRouter from 'react-router-dom/withRouter';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nfunction MarkdownRenderer(props) {\n\n    const theme = useTheme();\n\n    const useStyles = makeStyles({\n        list: {\n            \"list-style\": \"circle\",\n        },\n        listItem: {\n            paddingTop: 0,\n            paddingBottom: 0,\n        },\n        listText: {\n            marginTop: 0,\n            marginBottom: 0,\n        }\n      });\n\n    const classes = useStyles();\n\n    switch (props.contentType) {\n        case 'h2':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Header header = {props.content}/>\n                    </Grid>\n                </Grid>\n            );\n        case 'h4':\n            return(\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <SubHeader SubHeader = {props.content}/>\n                    </Grid>\n                </Grid>\n            )\n        case 'list':\n            let items = props.content.split(\"::\");\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <List dense={true} className={classes.list}>\n                            {items.map(item =>\n                                <ListItem className={classes.listItem}>\n                                    <ListItemText className={classes.listText} primary={\n                                        <Typography variant=\"body1\">\n                                            {item}\n                                        </Typography>\n                                    }/>\n                                </ListItem>\n                            )}\n                        </List>\n                    </Grid>\n                </Grid>\n            )\n        case 'body':\n            return (\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Typography variant=\"body1\" paragraph=\"true\">\n                            {props.content}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        case 'particle':\n            return(\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={9} md={7} lg={6}>\n                        <Header header={props.content}/>\n                        <Particles\n                        params={{\n                                particles: {\n                                    color: {\n                                        value: theme.palette.primary.main,\n                                    },\n                                    links: {\n                                        color: theme.palette.primary.main,\n                                      },\n                                },\n                            }\n                        }\n                        />\n                    </Grid>\n                </Grid>\n            );\n    }\n}\n\nexport default withRouter(MarkdownRenderer)","import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport MarkdownRenderer from './MarkdownRenderer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Article(props) {\n\n    const [article, setArticle] = useState();\n\n    useEffect(() => {\n        axios.get('http://127.0.0.1:5000/api/article', {\n            params: {\n                slug: props.match.params.slug\n            }\n        })\n        .then(res => {\n            setArticle(res.data)\n        })\n    }, [false])\n\n    return (\n        <React.Fragment>\n            <Box ml=\"auto\" mr=\"auto\">\n                {article ? article.content.map(articleContent =>\n                <MarkdownRenderer contentType={articleContent.content_type} content={articleContent.content}/>): <CircularProgress color=\"secondary\"/>\n                }\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Article);","import React from 'react';\nimport withRouter from 'react-router-dom/withRouter';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nfunction Login(props){\n\n    const theme = useTheme();\n\n    const useStyles = makeStyles({\n        title: {\n            paddingBottom: \"2rem\",\n        },\n        field: {\n            paddingRight: \"1rem\",\n        },\n        topMargin: {\n            marginTop: \"1rem\",\n        }\n      });\n\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\">\n            <Grid item xs={4}>\n                <Card raised=\"true\" className={classes.topMargin}>\n                    <CardContent>\n                        <Typography className={classes.title}>\n                            Login\n                        </Typography>\n                        <form noValidate autoComplete=\"off\">\n                            <TextField id=\"username\" label=\"Username\" variant=\"outlined\" className={classes.field}/>\n                            <TextField id=\"password\" label=\"Password\" variant=\"outlined\" />\n                        </form>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.topMargin}>\n                            Login\n                        </Button>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default withRouter(Login);","import React, { useState, lazy } from 'react';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\nimport Switch from 'react-router-dom/Switch';\nimport Route from 'react-router-dom/Route';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Paper from '@material-ui/core/Paper';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport responsiveFontSizes from '@material-ui/core/styles/responsiveFontSizes';\nimport Article from './components/Article';\nimport Login from './components/Login';\n\nconst PortfolioPage = lazy(() => import('./components/Portfolio'));\nconst BlogPage = lazy(() => import('./components/Blog'));\nconst FrontPage = lazy(() => import('./components/Front'));\nconst SkillsPage = lazy(() => import('./components/Skills'));\nconst Navbar = lazy(() => import('./components/Navbar'));\nconst Footer = lazy(() => import('./components/Footer'));\n\n\n\nfunction App(){\n  let prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', { noSsr: true });\n  if (window.localStorage.getItem('darkmode')){\n    prefersDarkMode = window.localStorage.getItem('darkmode');\n  }\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', prefersDarkMode);\n\n  let theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark': 'light',\n      primary: {\n        light: '#1769aa',\n        main: '#2196f3',\n        dark: '#4dabf5',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#41257b',\n        main: '#5e35b1',\n        dark: '#7e5dc0',\n        contrastText: '#000',\n      },\n    },\n  });\n\n  const useStyles = makeStyles({\n    paper: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    space: {\n      flexGrow: 1\n    }\n  });\n\n  const classes = useStyles();\n\n  theme = responsiveFontSizes(theme);\n\n    return (\n      <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <Paper className={classes.paper}>\n          <Navbar darkMode={darkMode} setDarkMode={setDarkMode}/>\n          <main>\n            <Switch>\n              <Route exact path=\"/\">\n                <FrontPage/>\n              </Route>\n              <Route path=\"/portfolio\">\n                <PortfolioPage/>\n              </Route>\n              <Route path=\"/blog/:slug\">\n                <Article/>\n              </Route>\n              <Route path=\"/blog\">\n                <BlogPage/>\n              </Route>\n              <Route path=\"/skills\">\n                <SkillsPage/>\n              </Route>\n              <Route path=\"/login\">\n                <Login/>\n              </Route>\n            </Switch>\n          </main>\n          <div className={classes.space}></div>\n          <Footer/>\n        </Paper>\n        </MuiThemeProvider>\n      </BrowserRouter>\n    );\n  };\n\n  function useLocalStorage(key, initValue){\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        const item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : initValue;\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    const setValue = value => {\n      try {\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return [storedValue, setValue];\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,  {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Suspense fallback={<div></div>}>\n        <App />\n      </Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}