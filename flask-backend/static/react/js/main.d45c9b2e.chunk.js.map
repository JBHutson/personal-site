{"version":3,"sources":["components/Navbar.js","components/Header.js","components/AboutContent.js","components/Footer.js","components/About.js","components/BlogContent.js","components/Blog.js","components/Lead.js","components/Front.js","components/TutorialContent.js","components/Tutorial.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","id","to","Component","withRouter","Header","this","subtitle","Fragment","header","AboutContent","Footer","AboutPage","setState","BlogContent","BlogPage","Lead","FrontPage","TutorialContent","TutorialPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.d45c9b2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport './Navbar.css'\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar\">\n                <div id=\"navContainer\">\n                    <div id=\"flex\">\n                        <ul id=\"navMenu\">\n                            <li><Link to=\"/\" id=\"brand\">James Hutson</Link></li>\n                            <li className=\"navLink\"><Link to=\"/about\" className=\"link\">About</Link></li>\n                            <li><Link to=\"/blog\" className=\"link\">Blog</Link></li>\n                            <li><Link to=\"/tutorial\" className=\"link\">Tutorials</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(Navbar);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Header.css'\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.subtitle) {\n            return (\n                <React.Fragment>\n                    <header>\n                        <div id=\"header\">\n                            <h1>\n                                {this.props.header}\n                            </h1>\n                            <p className=\"subtitle\">\n                                {this.props.subtitle}\n                            </p>\n                        </div>\n                    </header>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <header>\n                        <div id=\"header\">\n                            <h1>\n                                {this.props.header}\n                            </h1>\n                        </div>\n                    </header>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default withRouter(Header);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\n\nclass AboutContent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header header={'About'}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(AboutContent);","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport './Footer.css'\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <footer className=\"footerFlex\">\n                    <section className=\"footContainer\">\n                        <nav className=\"footerLinks\">\n                            <Link to=\"/blog\" className=\"link\">Blog</Link>\n                            <Link to=\"/tutorial\" className=\"link\">Tutorials</Link>\n                        </nav>\n                    </section>\n                </footer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Footer);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport AboutContent from './AboutContent'\nimport Footer from './Footer'\n\nclass AboutPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.setState({});\n      }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <main>\n                    <AboutContent/>\n                </main>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(AboutPage);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\n\nclass BlogContent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header header={'Blog'} subtitle={'Articles about various topics related to the tech industry'}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(BlogContent);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport BlogContent from './BlogContent';\nimport Footer from './Footer'\n\nclass BlogPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <main>\n                    <BlogContent/>\n                </main>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(BlogPage);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Lead.css'\n\nclass Lead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"lead\">\n                    <h1>\n                        Hello, I'm James\n                    </h1>\n                    <h2>\n                        description text\n                    </h2>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Lead);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Lead from './Lead';\nimport Footer from './Footer';\n\nclass FrontPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <main>\n                    <Lead/>\n                </main>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(FrontPage);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\n\nclass TutorialContent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header header={'Life'} subtitle={\"Tutorials I think would be useful\"}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(TutorialContent);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport TutorialContent from './TutorialContent';\nimport Footer from './Footer';\n\nclass TutorialPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <main>\n                    <TutorialContent/>\n                </main>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(TutorialPage);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport AboutPage from './components/About';\nimport BlogPage from './components/Blog';\nimport FrontPage from './components/Front';\nimport TutorialPage from './components/Tutorial';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={FrontPage} />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/blog\" component={BlogPage} />\n          <Route path=\"/tutorial\" component={TutorialPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}