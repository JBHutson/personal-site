{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/capitalize.js","components/Header.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","components/BlogContent.js","components/Blog.js"],"names":["capitalize","string","Error","_formatMuiErrorMessage","charAt","toUpperCase","slice","withRouter","props","subtitle","Fragment","display","justifyContent","mt","variant","header","paragraph","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","styled","componentCreator","styledWithoutDefault","style","options","defaultTheme","styleFunction","css","compose","borders","flexbox","grid","positions","shadows","sizing","spacing","Box","Header"],"mappings":"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","file":"js/7.405cf777.chunk.js","sourcesContent":["import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction Header(props) {\n\n    if (props.subtitle) {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Typography variant=\"h4\">\n                            {props.subtitle}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <header>\n                    <Box display=\"flex\" justifyContent=\"center\" mt=\"2rem\">\n                        <Typography variant=\"h2\" paragraph=\"true\">\n                            {props.header}\n                        </Typography>\n                    </Box>\n                </header>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default withRouter(Header);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, grid, palette, positions, shadows, sizing, spacing, typography, css } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = css(compose(borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\n\nfunction BlogContent() {\n\n    return (\n        <React.Fragment>\n            <Header header={'Blog'} subtitle={'Articles about various topics related to the tech industry'}/>\n        </React.Fragment>\n    );\n}\n\n\nexport default withRouter(BlogContent);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport BlogContent from './BlogContent';\n\nfunction BlogPage() {\n    return (\n        <React.Fragment>\n            <BlogContent/>\n        </React.Fragment>\n    );\n}\n\n\nexport default withRouter(BlogPage);"],"sourceRoot":""}